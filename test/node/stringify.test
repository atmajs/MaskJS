UTest({
	
	'minify' () {
		test('min');
	},
	
	'beautify' () {
		test('format', 2);
	}
	
})

function test(filename, indent) {
	var M = Mask
	
	io
		.File
		.read(`test/tmpl/stringify/${filename}.mask`)
		.split(/^===$/gm)
		.map(function(test){
			
			return test
				.split(/^---$/gm)
				.map(x => x.trim());
		})
		.forEach(function(parts){
			if (parts.length < 2) 
				return;
			
			var [ mask, expect ] = parts;
			var str = M.stringify(mask, indent);
			
			eq_(str, expect.replace(/[\r\n]+/g, '\n'));
		});
}