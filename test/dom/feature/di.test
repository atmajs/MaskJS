UTest({
	$after () {
		mask.cfg('getScript', null);
	},
	'should get instance from define args' () {
		class Foo {
			load () {}
		};

		mask.cfg('getScript', path => {
			return mask.class.Deferred.run(resolve => resolve(new Foo))
		});


		var template = `
			import * as IFoo from 'Foo.js';

			define FooCompo (foo: IFoo) {
				function onRenderStart () {
					this.emitOut('fooSignal', foo);	
				}
			}

			FooCompo;
		`;

		mask.render(template, null, null, null, {
			slots: {
				fooSignal: assert.await(function(sender, foo){
					is_(foo, Foo);
				})
			}
		});

	},
	'!should get instance from define constructor' () {
		class Foo {
			load () {
				return 'Hello'
			}
		};

		mask.cfg('getScript', path => {
			return mask.class.Deferred.run(resolve => resolve(new Foo))
		});


		var template = `
			import * as IFoo from 'Foo.js';

			define FooCompo  {
				function constructor (foo: IFoo) {
					this.foo = foo;
				}
				function onRenderStart () {
					this.emitOut('fooSignal', this.foo.load());	
				}
			}

			FooCompo;
		`;

		mask.render(template, null, null, null, {
			slots: {
				fooSignal: assert.await(function(sender, str){
					eq_(str, 'Hello');
				})
			}
		});
	}
})