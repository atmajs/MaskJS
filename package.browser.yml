apps:
  autoreload:
    file: src/autoreload/ModuleReload.ts
    outputMain: lib/plugin.reload.js
    package:
      moduleWrapperCustomPath: "./src/autoreload/wrapper.js"

  converter:
    file: projects/converter/src/Converter.ts
    outputMain: lib/converter-js.js
    package:
      moduleWrapperCustomPath: "./src/umd-wrapper.js"
    settings:
      atma-io-middleware-condcomments:
        defines:
          BROWSER: false
          NODE: true

  browser-default:
    outputMain: lib/mask.js
    package:
      moduleWrapperCustomPath: "./src/umd-wrapper.js"
    settings:
      atma-io-middleware-condcomments:
        defines:
          BROWSER: true
          NODE: false
      atma-loader-ts:
        typescript: "#import ./tsconfig.json"
      atma-io-middleware-uglify:
        uglify: "#import ./.uglify.yml"
    copyFiles:
      #ref-mask-node/lib/mask.bootstrap.js: lib/mask.bootstrap.js
      #ref-mask-node/lib/mask.node.js: lib/mask.node.js
      #src/parser/html/html_entities.js: lib/html_entities.js

common:
  file: src/mask.ts
  package:
    module: import
    moduleWrapper: custom
    import:
      removeUnusedExports: true
      lazy:
        "/custom/*":
          - modules/exports
          - expression/src/exports
        "/expression/*":
          - project/observer
        "/builder/*":
          - "/feature/"
        "/renderer/*":
          - compo/exports
        "/mask-compo/*":
          - util/reporters
          - parser/exports
          - builder/exports
          - expression/src/exports
          - renderer/exports
          - parser/exports
          - "/feature/"
        "CompoStatics\b":
          - Component
        "/expression/*":
          - mask-compo
  dynamicDependencies:
  - "^vm$"
  - "^fs$"
  - "^module$"
  - "^path$"
  extensions:
    io:
      type: js
  defaultExtensions:
    js: ts
  middlewares:
    js:
    - atma-io-middleware-condcomments:read
    - atma-io-middleware-importer:read
    - atma-io-middleware-uglify:write
    ts:
    - atma-io-middleware-condcomments:read
    - atma-io-middleware-importer:read
    - atma-loader-ts:read
  settings:
      atma-loader-ts:
        typescript: "#import ./tsconfig.json"
  options:
    include:
      routes:
        "@core": src/{0}
        "@utils": ref-utils/src/{0}
        "@mask-j": projects/mask-j/src/jmask/{0}
        "@compo": projects/mask-compo/src/{0}
        "@binding": projects/mask-binding/src/{0}
        "@project": projects/{0}
        "@mask-node": projects/mask-node/src/{0}
