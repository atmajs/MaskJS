UTest({
	$before () {
		// use default module loader
		mask.config('modules', 'default');
		mask.Module.cfg('moduleResolution', 'node');
	},

	'should load default file in node_modules' () {
		return mask
				.renderAsync(`
					import Foo from '/test/tmpl/npm/foo.mask';

					Foo;
				`)
				.then(dom => {
					return UTest.domtest(dom, `
						find ('h4') > text ('EmptyPackage');
					`);
				});
	},
	'should fail loading' (done) {
		var errors = [];
		mask.on('error', assert.await((error) => errors.push(error)));
		mask
				.renderAsync(`
					import Any from '/test/tmpl/npm/foo-none.mask';
					Any;
				`)
				.always(() => mask.off('error'))
				.done(() => {
					notEq_(errors.length, 0);
					var error = errors[0];
					has_(error.message, 'Module was not resolved');

					mask.off('error');
					done();
				});
	}
});

// vim: set ft=js: