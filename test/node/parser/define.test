UTest({
	'should parse name' () {
		var ast = jmask(`
			define Foo {
				h4 > 'Hello'
			}
		`);
		var def = ast.filter('define').get(0);
		eq_(def.name, 'Foo');
	},
	'should parse extends' () {
		var ast = Mask.parse(`
			define
				Foo
					extends Baz, $qu_x {
						h4 > 'Hello'
					}
		`);
		var def = jmask(ast).filter('define').get(0);
		eq_(def.name, 'Foo');
		deepEq_(def.extends, [
			{ compo: 'Baz'  },
			{ compo: '$qu_x'}
		]);
	},
	'should parse mask head in "as" ' () {
		var ast = Mask.parse(`
			define
				Foo
					as ( .some data-id='name') {
						h4 > 'Hello'
					}
		`);
		var def = jmask(ast).filter('define').get(0);
		eq_(def.name, 'Foo');
		eq_(def.as, " .some data-id='name'");
	},
	'should parse arguments ' () {
		var ast = Mask.parse(`
			define Foo (
						foo, $scope.qu_x ) {
				h4 > 'Hello'
			}
		`);
		var def = jmask(ast).filter('define').get(0);
		deepEq_(def.arguments, [ { prop: 'foo'}, { prop: '$scope.qu_x'} ]);
	},
})

// vim: set ft=js: