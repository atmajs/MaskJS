UTest({
	'parser': {
		'all' () {
			var tmpl = mask.parse(`
				import * as foo3 from '/test/tmpl/a.mask';
				foo3;
			`);
			var $import = tmpl.nodes[0];
			eq_($import.tagName, 'import');
			has_($import, {
				path: '/test/tmpl/a.mask',
				alias: 'foo3'
			});
		},
		'compos' () {
			var tmpl = mask.parse(`
				import foo as baz3 from '/test/tmpl/a.mask';
				baz3;
			`);
			var $import = tmpl.nodes[0];
			eq_($import.tagName, 'import');
			has_($import, {
				path: '/test/tmpl/a.mask',
				exports: [
					{
						name: 'foo',
						alias: 'baz3'
					}
				]
			});
		},
		'generic path' () {
			var tmpl = mask.parse(`
				import foo3 from 'compo/bar';
				baz3;
			`);
			var $import = tmpl.nodes[0];
			eq_($import.tagName, 'import');
			eq_($import.path, 'compo/bar.mask')
			has_($import.exports, [ { name: 'foo3' } ]);
		}
	},
	'render': {
		'all' (done) {
			mask
				.renderAsync(`
					import * as foo1 from '/test/tmpl/modules/h4.mask';
					foo1;
				`)
				.done(assert.await(function(dom){
					$(dom).has_('h4');
					done();
				}));
		},
		'selector' (done) {
			mask
				.renderAsync(`
					import header as foo2 from '/test/tmpl/modules/header_content.mask';
					foo2;
				`)
				.done(assert.await(function(dom){
					$(dom).has_('header');
					$(dom).hasNot_('.content');
					done();
				}))
		},
		'deep nesting' (done) {
			mask
				.renderAsync(`
					import * as :nest from '/test/tmpl/modules/nest.mask';
					:nest;
				`)
				.done(assert.await(function(dom){
					$(dom)
						.has_('section.a')
						.has_('h4.b');
					done();
				}))
		}
	}
	
})