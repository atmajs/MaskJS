UTest({
	'should define the component' () {
		var template = `
			define foo {
				h4 > 'FooContent'
				span > 'A'
			}
			// comment
			div > foo;
		`;
		var dom = mask.render(template);
		return UTest.domtest(dom, `
			filter ('div') {
				children ('h4') {
					html FooContent;
				}
				children ('span') {
					html A;
				}
			}
		`);
	},
	'should merge contents' () {
		var template = `
			define foo {
				h4 > '~[: $a.text]'
				section > @xContent;
			}
			div > foo text='FooText' {
				@xContent > 'BazContent'
			}
		`;
		var dom = mask.render(template);
		return UTest.domtest(dom, `
			filter ('div') {
				children ('h4') {
					html FooText;
				}
				children ('section') {
					html BazContent;
				}
			}
		`);
	},
	'!should call onRenderStart' () {
		var template = `
			define foo {
				function onRenderStart(model) {
					eq_(model.name, 'Foo');
					this.parent.count = this.parent.count == null
						? 1
						: ++this.parent.count
						;
				}
			}
			foo;
			foo;
		`;
		
		var app = mask.Compo.initialize(template, { name: 'Foo' });
		var Foo = mask.getHandler('foo');
		is_(Foo.prototype.onRenderStart, 'Function');
		
		eq_(app.components.length, 3);
		eq_(app.count, 2);
	},
	'should define a function' () {
		var template = `
			define foo {
				function fooBar() {
					return 'hello';
				}
				h4 > 'Foo'
			}
			foo;
		`;
		
		var app = mask.Compo.initialize(template, { name: 'Foo' });
		app.$.has_('h4');
		eq_(app.find('foo').fooBar(), 'hello');
	},
	'template should be extended' () {
		var tmpl = `
		    define baz {
				h4 > @inBaz;
			}
			define foo extends baz {
				@inBaz {
					i > "FooBaz"
				}
			}
			
			foo;
		`;
		var dom = mask.render(tmpl);
		return UTest.domtest(dom, `
			filter('h4') {
				html ("<i>FooBaz</i>");
			}
		`)
	},
	'template should be extended also with attributes' () {
		var tmpl = `
		    define baz {
				button > '@attr.text';
			}
			
			baz text='Hello';
		`;
		var dom = mask.render(tmpl);
		return UTest.domtest(dom, `
			filter('button') {
				text Hello;
			}
		`);
	}
})